---
title: "PigWeb: infrared"
author: "Liza Moscoviche & Anja Eggert"
date: "`r Sys.Date()`" 
editor: visual
code-fold: false
toc: true
format: html
self-contained: true
execute:
  eval: true
  warning: false
  message: false
  echo: true
# project:
#   input-dir: "./PigWeb-hormones"
---

# Libraries

```{r, libraries}
library(kableExtra)
library(tidyverse)
library(rstatix)
library(lmerTest)
library(car)
library(performance)
library(emmeans)
```

# Scripts, etc.

```{r}
contr = lmerControl(optimizer   = "bobyqa",
                    optCtrl     = list(maxfun = 10000000),
                    calc.derivs = FALSE)
```

```{r}
my_theme = theme_classic() +
  theme(text = element_text(family = "sans"),
        plot.title   = element_text(face = "plain", size = 16),
        axis.title   = element_text(face = "bold", size = 16),
        axis.text    = element_text(size = 14, angle = 0, vjust = 0.5),
        legend.title = element_text(face = "bold", size = 16),
        legend.text  = element_text(face = "plain", size = 16),
        strip.text   = element_text(size = 16),
        legend.position = "top",
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank())
```

```{r}
set.seed(1989)
```

# Data

Analysis of infrared data from 2 institutes, AU and IRTA. No data available from other institutes.

## Read data

```{r}
dat <- read_csv("./data/PigWeb-physiology.csv",
                show_col_types = FALSE)
```

## Process data

```{r}
dat <- dat |> 
  mutate(across(where(is.character), as.factor)) |> 
  mutate(date           = dmy(date),
         date.f         = as.factor(date),
         institute      = fct_relevel(institute, "AU", "INRAE", "IRTA", "WUR"),
         institute      = relevel(institute, ref = "AU"),
         sample         = relevel(sample,    ref = "pre"),
         context        = relevel(context,   ref = "negative"),
         time_collect   = hour(time) + minute(time)/60,
         time_collect.z    = as.vector(scale(time_collect)),
         weight_start_kg.z = as.vector(scale(weight_start_kg)))
```

# Descriptive statistics across context

## Data from AU

```{r}
dat |> 
  group_by(context) |> 
  rstatix::get_summary_stats(eye_IRT_max,
                             show = c("median","q1", "q3")) |>
  ungroup() |> 
  arrange(variable) |> 
  mutate(across(c(median, q1, q3), ~ round(., 1))) |> 
  kable(caption = "Text for Tab. 9") |>
  kable_styling(bootstrap_options = c("striped", "hover"), font_size = 12) |> 
  scroll_box()
```

```{r}
dat |> 
  group_by(posture_at_sampling) |> 
  rstatix::get_summary_stats(eye_IRT_max,
                             show = c("median","q1", "q3")) |>
  ungroup() |> 
  arrange(variable) |> 
  mutate(across(c(median, q1, q3), ~ round(., 1))) |> 
  kable(caption = "Text for Tab. 9") |>
  kable_styling(bootstrap_options = c("striped", "hover"), font_size = 12) |> 
  scroll_box()
```

## Data from IRTA

```{r}
dat |> 
  group_by(sample) |> 
  rstatix::get_summary_stats(ear_IRT_max,
                             show = c("median","q1", "q3")) |>
  ungroup() |> 
  arrange(variable) |> 
  mutate(across(c(median, q1, q3), ~ round(., 1))) |> 
  kable(caption = "Text for Tab. 10") |>
  kable_styling(bootstrap_options = c("striped", "hover"), font_size = 12) |> 
  scroll_box()
```

# Model eye temperature (AU data)

Model with 2 interactions of fixed effects and random intercepts but constant slope.

Full model:

```{r}
mod.AU <- lmerTest::lmer(eye_IRT_max ~
                           sample * context   +
                           posture_at_sampling +
                           weight_start_kg.z +
                           (1|pig_group_unique),
                         data    = dat,
                         REML    = FALSE,
                         control = contr)
```

Reduced model, without interactions and without `sample` and `context`:

```{r}
mod.AU.red <- lmerTest::lmer(eye_IRT_max ~
                               posture_at_sampling +
                               weight_start_kg.z +
                               (1|pig_group_unique),
                             data    = dat,
                             REML    = FALSE,
                             control = contr)
```

Comparison of reduced and full model:

```{r}
anova(mod.AU.red, mod.AU, test = "Chisq")
```

But final model without interaction term, as it is not significant:

```{r}
mod.AU <- lmerTest::lmer(eye_IRT_max ~
                           sample +
                           context   +
                           posture_at_sampling +
                           weight_start_kg.z +
                           (1|pig_group_unique),
                         data    = dat,
                         REML    = FALSE,
                         control = contr)
```

## Final model

Get effect estimates and standard errors of the model fitted with ML (`REML = FALSE`):

```{r}
round(summary(mod.AU)$coefficients, 2)
```

Get *p* values of fixed effects and interactions of the model fitted with REML (`REML = TRUE`). Using `drop1()`, for factors that are part of interactions, the main effect cannot be tested. In this case `car::Anova` can be used:

```{r}
round(drop1(mod.AU |> update(REML = TRUE),
            test = "Chisq"), 3)

car::Anova(mod.AU |> update(REML = TRUE),
           test.statistic = "Chisq",
           type = 3) # as with interaction, otherwise set type = 2

car::Anova(mod.AU |> update(REML = TRUE),
           test.statistic = "F",
           type = 3) # as with interaction, otherwise set type = 2
```

## Model diagnostics

Combined diagnostics:

```{r}
performance::check_model(mod.AU)
```

Collinearity:

```{r}
xx=lm(eye_IRT_max ~ 
        sample +
        context +
        posture_at_sampling +
        weight_start_kg.z, 
      data = dat)
car::vif(xx) 
```

# Model ear temperature (IRTA data)

Model with one interaction of fixed effects and random intercepts but constant slope.

Full model:

```{r}
mod.IRTA <- lmerTest::lmer(ear_IRT_max ~
                             sample * context   +
                             weight_start_kg.z +
                             (1|pig_id_unique),
                           data    = dat,
                           REML    = FALSE,
                           control = contr)
```

Reduced model, without interactions and without `sample` and `context`:

```{r}
mod.IRTA.red <- lmerTest::lmer(ear_IRT_max ~
                             weight_start_kg.z +
                             (1|pig_id_unique),
                           data    = dat,
                           REML    = FALSE,
                           control = contr)
```

Comparison of reduced and full model:

```{r}
anova(mod.IRTA.red, mod.IRTA, test = "Chisq")
```

But final model without interaction term, as it is not significant:

```{r}
mod.IRTA <- lmerTest::lmer(ear_IRT_max ~
                             sample +
                             context   +
                             weight_start_kg.z +
                             (1|pig_id_unique),
                           data    = dat,
                           REML    = FALSE,
                           control = contr)
```

## Final model

Get effect estimates and standard errors of the model fitted with ML (`REML = FALSE`):

```{r}
round(summary(mod.IRTA)$coefficients, 2)
```

Get *p* values of fixed effects and interactions of the model fitted with REML (`REML = TRUE`). Using `drop1()`, for factors that are part of interactions, the main effect cannot be tested. In this case `car::Anova` can be used:

```{r}
round(drop1(mod.IRTA |> update(REML = TRUE),
            test = "Chisq"), 3)

car::Anova(mod.IRTA |> update(REML = TRUE),
           test.statistic = "Chisq",
           type = 3) # as with interaction, otherwise set type = 2

car::Anova(mod.IRTA |> update(REML = TRUE),
           test.statistic = "F",
           type = 3) # as with interaction, otherwise set type = 2
```

## Model diagnostics

Combined diagnostics:

```{r}
performance::check_model(mod.AU)
```

Collinearity:

```{r}
xx=lm(eye_IRT_max ~ 
        sample +
        context +
        posture_at_sampling +
        weight_start_kg.z, 
      data = dat)
car::vif(xx) 
```

# Citing R

"All analyses were performed using R Statistical Software (version 4.4.2; R Core Team 2024)".

Reference: R Core Team (2024). R: A language and environment for statistical computing. R Foundation for Statistical Computing, Vienna, Austria. URL https://www.R-project.org/.

```{r, R-Zitieren}
citation()
version$version.string
```

```{r, Pakete-Zitieren}
citation("kableExtra")
citation("tidyverse")
citation("rstatix")
citation("lmerTest")
citation("car")
citation("performance")
citation("emmeans")
```

# Session Info

```{r, R-Session}
sessionInfo()
```
